on:
  workflow_call:
  workflow_dispatch:

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      dawn-tag: ${{ steps.find-tag.outputs.dawn-tag }}
      mirror-tag: ${{ steps.find-tag.outputs.mirror-tag }}
      skip: ${{ steps.find-tag.outputs.skip }}
    steps:
      - name: Find latest tag
        id: find-tag
        run: |
          # Get upstream dawn tags and our existing mirror release tags
          git ls-remote --tags https://github.com/${GITHUB_REPOSITORY}.git dawn/\* | cut -f2 > dawn-tags
          git ls-remote --tags https://github.com/${GITHUB_REPOSITORY}.git mirror/\* | cut -f2 > mirror-tags

          # We intend to build the latest available dawn tag...
          cat dawn-tags | sort -rV | head -n 1 | tail -c +11 > latest-dawn-tag

          # ...which would lead to a new matching mirror tag
          echo mirror/$(cat latest-dawn-tag | tail -c +6) > new-mirror-tag

          # 'skip' is non empty if the new tag already exists
          echo "skip=$(grep -Fx refs/tags/$(cat new-mirror-tag) mirror-tags)" >> "$GITHUB_OUTPUT"
          echo "dawn-tag=$(cat latest-dawn-tag)" >> "$GITHUB_OUTPUT"
          echo "mirror-tag=$(cat new-mirror-tag)" >> "$GITHUB_OUTPUT"

  create-release:
    if: ${{ !needs.prebuild.outputs.skip }}
    runs-on: ubuntu-latest
    needs: prebuild
    permissions:
      contents: write
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MIRROR_TAG: ${{ needs.prebuild.outputs.mirror-tag }}
          CHROMIUM_TAG: ${{ needs.prebuild.outputs.dawn-tag }}
        run: >
          gh release create "$MIRROR_TAG"
          --repo="$GITHUB_REPOSITORY"
          --title="$CHROMIUM_TAG"
          --notes="Automatic build of tag [$CHROMIUM_TAG](https://dawn.googlesource.com/dawn/+/refs/heads/$CHROMIUM_TAG)."

  build-artifacts:
    if: ${{ !needs.prebuild.outputs.skip }}
    strategy:
      matrix:
        os:
          - name: linux
            image: ubuntu-latest
          - name: windows
            image: windows-latest
          - name: macos
            image: macos-latest
        config: [ Debug, Release ]

    runs-on: ${{ matrix.os.image }}
    needs: [ prebuild, create-release ]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.prebuild.outputs.dawn-tag }}

      - name: Configure
        run: >
          cmake
          -B out
          -DCMAKE_BUILD_TYPE=${{ matrix.config }}
          -DCMAKE_INSTALL_PREFIX=out/install

      - name: Build
        run: >
          cmake
          --build out
          --config ${{ matrix.config }}

      - name: Install
        run: >
          cmake
          --install out
          --config ${{ matrix.config }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dawn-${{ matrix.os.name }}-x64-${{ matrix.config }}
          path: out/install

      - name: Compress artifact
        uses: eliemichel/dawn-mirror/.github/actions/zip@github
        with:
          name: dawn-${{ matrix.os.name }}-x64-${{ matrix.config }}
          path: '*'
          wd: out/install

      - name: Upload to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          gh release upload ${{ needs.prebuild.outputs.mirror-tag }}
          --repo=${{ github.repository }}
          out/install/dawn-${{ matrix.os.name }}-x64-${{ matrix.config }}.zip
